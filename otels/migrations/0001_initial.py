# Generated by Django 3.1.7 on 2022-09-23 12:24

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('management', '0001_initial'),
        ('cities_light', '0001_initial'),
        ('accomodations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('actions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Airport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='Name')),
                ('code', models.CharField(blank=True, max_length=3, verbose_name='Airport Code XYZ')),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('isActive', models.BooleanField(blank=True, default=True, null=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='cities_light.country', verbose_name='Ülke')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='airport_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='cities_light.city', verbose_name='Mevki')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='cities_light.region', verbose_name='İl')),
                ('subRegion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='cities_light.subregion', verbose_name='İlçe')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='airport_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Hava Alanı',
                'verbose_name_plural': 'Hava Alanları',
            },
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, verbose_name='Bank name')),
                ('logoImage', models.ImageField(blank=True, null=True, upload_to='images/', verbose_name='Image')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='bank_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='bank_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Banka',
                'verbose_name_plural': 'Bankalar',
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contractPerson', models.CharField(blank=True, max_length=30, verbose_name='Conctract Person')),
                ('description', models.CharField(blank=True, max_length=250, verbose_name='Contract Description')),
                ('startDate', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('finishDate', models.DateField(blank=True, null=True, verbose_name='Finish Date')),
                ('contractAccomodationStartDate', models.DateField(blank=True, null=True, verbose_name='contractAccomodationStartDate')),
                ('contractAccomodationEndDate', models.DateField(blank=True, null=True, verbose_name='contractAccomodationEndDate')),
                ('files', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, null=True, size=None)),
                ('isPurchasePrice', models.BooleanField(default=False, verbose_name='Is Purchase Price or Sale Price?')),
                ('isHaveContract', models.BooleanField(default=False, verbose_name='Is Have a Contract?')),
                ('isOverride', models.BooleanField(default=False, verbose_name='Is Override?')),
                ('isContractActive', models.BooleanField(default=True, verbose_name='Is Contrat Active?')),
                ('isStaus', models.BooleanField(default=False, verbose_name='Is Status?')),
                ('minPayment', models.IntegerField(blank=True, default=10, null=True, verbose_name='Percentage of Minimum Payment')),
                ('contractType', models.CharField(blank=True, max_length=250, verbose_name='Conctract Type')),
                ('contractShape', models.CharField(blank=True, max_length=250, verbose_name='Conctract Shape')),
                ('paymentAmount', models.FloatField(blank=True, null=True)),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='contract_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
            ],
            options={
                'verbose_name': 'Kontrat',
                'verbose_name_plural': 'Kontratlar',
            },
        ),
        migrations.CreateModel(
            name='Otel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Name')),
                ('otelLogo', models.CharField(blank=True, max_length=255, null=True)),
                ('erpNo', models.CharField(blank=True, max_length=20, null=True, verbose_name='ERP No')),
                ('description', models.CharField(blank=True, max_length=250, null=True, verbose_name='Description')),
                ('operationNote', models.TextField(blank=True, null=True, verbose_name='Operation Note')),
                ('address', models.CharField(blank=True, max_length=250, null=True, verbose_name='Address')),
                ('email', models.TextField(blank=True, null=True, verbose_name='Email')),
                ('seoText', models.TextField(blank=True, null=True, verbose_name='Seo Text')),
                ('supplierNotes', models.TextField(blank=True, null=True, verbose_name='Supplier Notes')),
                ('phone1', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone 1')),
                ('phone2', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone 2')),
                ('priceStatus', models.BooleanField(default=False)),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('isReklamStatus', models.BooleanField(default=True, verbose_name='isReklamStatus')),
                ('isStatusActive', models.BooleanField(default=True, verbose_name='Is Otel Active')),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('distancesToPOIS', models.JSONField(blank=True, null=True)),
                ('extraFeatures', models.JSONField(blank=True, null=True)),
                ('otelManagerData', models.JSONField(blank=True, null=True)),
                ('ytLink', models.URLField(blank=True, max_length=250, null=True, verbose_name='Youtube link')),
                ('taxOffice', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Tax Office')),
                ('taxNumber', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Tax Number')),
                ('postalCode', models.CharField(blank=True, max_length=250, null=True, verbose_name='Postal Code')),
                ('isDelivered', models.BooleanField(default=False, verbose_name='is Delivered to Netsis')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('airport', models.ManyToManyField(blank=True, null=True, to='otels.Airport', verbose_name='Airports')),
            ],
            options={
                'verbose_name': 'Otel',
                'verbose_name_plural': 'Oteller',
            },
        ),
        migrations.CreateModel(
            name='OtelFacilityDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name En')),
                ('name_ru', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name Ru')),
                ('feature', models.TextField(blank=True, verbose_name='Feature')),
                ('feature_en', models.TextField(blank=True, null=True, verbose_name='Feature En')),
                ('feature_ru', models.TextField(blank=True, null=True, verbose_name='Feature Ru')),
                ('iconClassName', models.CharField(blank=True, max_length=100, verbose_name='Icon Class Name')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('isPrice', models.BooleanField(blank=True, default=False, verbose_name='Is Price')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='otelfacilitydetail_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
            ],
            options={
                'verbose_name': 'Otel Tesis Detayı',
                'verbose_name_plural': 'Otel Tesis Detayları',
            },
        ),
        migrations.CreateModel(
            name='OtelServiceCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name En')),
                ('name_ru', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name Ru')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='otelservicevategory_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='otelservicevategory_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Otel Servis Kategorisi',
                'verbose_name_plural': 'Otel Servis Kategorileri',
            },
        ),
        migrations.CreateModel(
            name='UploadFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, max_length=255, null=True, upload_to='allFiles/')),
                ('isActive', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'uploadfile',
                'verbose_name_plural': 'uploadfiles',
                'db_table': 'uploadfile',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True, verbose_name='Supplier Title')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='supplier_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='supplier_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Tedarikçi',
                'verbose_name_plural': 'Tedarikçiler',
            },
        ),
        migrations.CreateModel(
            name='StakeHolderContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullName', models.CharField(blank=True, max_length=100, verbose_name='Name')),
                ('title', models.CharField(blank=True, max_length=50, verbose_name='Title')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='stakeholder_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('otel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='otels.otel', verbose_name='Otel')),
                ('personposition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='management.otelpersonposition', verbose_name='OtelPersonPosition')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='stakeholder_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Otel Yetkili Bilgisi',
                'verbose_name_plural': 'Yetkili Bilgileri',
            },
        ),
        migrations.CreateModel(
            name='SearchLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(blank=True, max_length=250, null=True, verbose_name='keywords')),
                ('startDate', models.DateField(blank=True, null=True)),
                ('finishDate', models.DateField(blank=True, null=True)),
                ('childCondition', models.CharField(blank=True, max_length=250, null=True, verbose_name='childCondition')),
                ('adultCount', models.IntegerField(blank=True, null=True)),
                ('childCount', models.IntegerField(blank=True, null=True)),
                ('response', models.JSONField(blank=True, null=True, verbose_name='Search Response')),
                ('otelsFound', models.IntegerField(blank=True, null=True, verbose_name='Number of otels Found')),
                ('pricesFound', models.IntegerField(blank=True, null=True, verbose_name='Number of prices Found')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='searchlog_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('otel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='otels.otel', verbose_name='Otel')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='searchlog_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Arama Logu',
                'verbose_name_plural': 'Arama Logları',
            },
        ),
        migrations.CreateModel(
            name='PeriodicDescriptionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='Name')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='periodicdescriptiontype_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='periodicdescriptiontype_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Dönemsel Açıklama Tipi',
                'verbose_name_plural': 'Dönemsel Açıklama Tipleri',
            },
        ),
        migrations.CreateModel(
            name='PeriodicDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startDate', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('finishDate', models.DateField(blank=True, null=True, verbose_name='Finish Date')),
                ('title', models.CharField(blank=True, max_length=255, verbose_name='Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='periodicdescription_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('descriptionType', models.ForeignKey(blank=True, default=2, on_delete=django.db.models.deletion.CASCADE, to='otels.periodicdescriptiontype', verbose_name='PeriodicDescription')),
                ('otel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='otels.otel', verbose_name='Otel')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='periodicdescription_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Dönemsel Açıklama',
                'verbose_name_plural': 'Dönemsel Açıklamalar',
            },
        ),
        migrations.CreateModel(
            name='PensionTypePeriodicDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startDate', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('finishDate', models.DateField(blank=True, null=True, verbose_name='Finish Date')),
                ('title', models.CharField(blank=True, max_length=250, verbose_name='Title')),
                ('description', models.CharField(blank=True, max_length=250, verbose_name='Description')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='roomtypeperiodicdescription_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('otel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='otels.otel', verbose_name='Otel')),
                ('pensionType', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, to='accomodations.pensiontype', verbose_name='Pansiyon Tipi')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='roomtypeperiodicdescription_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Pansiyontipi Dönemsel Açıklama',
                'verbose_name_plural': 'Pansiyontipi Dönemsel Açıklamalar',
            },
        ),
        migrations.CreateModel(
            name='PaymentPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paymentplan', models.IntegerField(blank=True, choices=[(1, 'Belirtilen Tarihte'), (2, 'Rezervasyon Tarihinden Önce'), (3, 'Rezervasyon Tarihinden Sonra'), (4, 'Check in Tarihinden Önce'), (5, 'Check in Tarihinden Sonra'), (6, 'Check out Tarihinden Önce'), (7, 'Check out Tarihinden Sonra')], default=1, null=True)),
                ('day', models.IntegerField(blank=True, null=True, verbose_name='Day')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('paymentPercentage', models.IntegerField(blank=True, null=True, verbose_name='Percentage of Payment')),
                ('description', models.CharField(blank=True, max_length=250, verbose_name='Payment Description')),
                ('isPaymentByCheck', models.BooleanField(default=False, verbose_name='Is Payment Accepted by Check?')),
                ('isPaymentByCreditCard', models.BooleanField(default=False, verbose_name='Is Payment Accepted by CreditCard?')),
                ('isPaymentByMoneyTransfer', models.BooleanField(default=False, verbose_name='Is Payment Accepted by MoneyTransfer?')),
                ('checkIssueDate', models.DateField(blank=True, null=True, verbose_name='check Issue Date')),
                ('checkPaymentDate', models.DateField(blank=True, null=True, verbose_name='check Payment Date')),
                ('checkPaymentAmount', models.FloatField(blank=True, null=True, verbose_name='check Payment Amount')),
                ('checkDescription', models.CharField(blank=True, max_length=250, verbose_name='check Description')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patmentplans', to='otels.contract', verbose_name='Contract')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='paymentplan_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='paymentplan_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Ödeme Planı',
                'verbose_name_plural': 'Ödeme Planları',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30, verbose_name='Payment Method Name')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='paymentmethod_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='paymentmethod_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Ödeme YÖntemi',
                'verbose_name_plural': 'Ödeme Yöntemleri',
            },
        ),
        migrations.CreateModel(
            name='PaymentAccountInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.CharField(blank=True, max_length=250, null=True, verbose_name='Aciklamalar')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='otels.bank', verbose_name='Bank')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='paymentaccountinfo_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('otel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='otels.otel', verbose_name='Otel')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='paymentaccountinfo_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Modul Odeme Bilgisi',
                'verbose_name_plural': 'Modul Odeme Bilgileri',
            },
        ),
        migrations.CreateModel(
            name='PayAtFacility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startDate', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('finishDate', models.DateField(blank=True, null=True, verbose_name='Finish Date')),
                ('minDays', models.IntegerField(blank=True, null=True, verbose_name='Min Days')),
                ('maxDays', models.IntegerField(blank=True, null=True, verbose_name='Max Days')),
                ('paymentPercentage', models.IntegerField(blank=True, null=True, verbose_name='Percentage of Payment')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payatfacilitychoices', to='otels.contract', verbose_name='Contract')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='payatfacility_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('inDays', models.ManyToManyField(blank=True, to='accomodations.inDays', verbose_name='Days')),
                ('roomType', models.ManyToManyField(blank=True, to='accomodations.RoomType', verbose_name='RoomTypes')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='payatfacility_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Tesiste Ödeme Seçeneği',
                'verbose_name_plural': 'Tesiste Ödeme Seçenekleri',
            },
        ),
        migrations.CreateModel(
            name='OtelType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='Name')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='oteltype_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='oteltype_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Otel Tipi',
                'verbose_name_plural': 'Otel Tipleri',
            },
        ),
        migrations.CreateModel(
            name='OtelTheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name En')),
                ('name_ru', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name Ru')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='oteltheme_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='oteltheme_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Otel Teması',
                'verbose_name_plural': 'Otel Temaları',
            },
        ),
        migrations.CreateModel(
            name='OtelServiceDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startDate', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('finishDate', models.DateField(blank=True, null=True, verbose_name='Finish Date')),
                ('descscription', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='otelservicedescription_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('otel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='otels.otel', verbose_name='Otel')),
                ('serviceCategory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='otels.otelservicecategory', verbose_name='OtelServiceCategory')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='otelservicedescription_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Otel Servisleri Açıklamasi',
                'verbose_name_plural': 'Otel Servisleri Açıklamaları',
            },
        ),
        migrations.CreateModel(
            name='OtelOwnership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='otelownership_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('otel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='otels.otel', verbose_name='Otel')),
                ('owners', models.ManyToManyField(related_name='owner_user', to=settings.AUTH_USER_MODEL, verbose_name='Owner of otel')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='otelownership_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Otel sahibi',
                'verbose_name_plural': 'Otel sahipleri',
            },
        ),
        migrations.CreateModel(
            name='OtelImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=35, verbose_name='Title')),
                ('description', models.CharField(blank=True, max_length=250, verbose_name='Description')),
                ('file', models.FileField(blank=True, null=True, upload_to='upload/', verbose_name='Video')),
                ('processType', models.IntegerField(blank=True, choices=[(1, 'Yeni Kayıt'), (2, 'Güncelleme'), (3, 'Varsayılan Atama'), (4, 'Silme')], default=1, null=True)),
                ('isVideo', models.BooleanField(default=True, verbose_name='Is Video?')),
                ('imageOrder', models.IntegerField(blank=True, null=True)),
                ('isDefault', models.BooleanField(default=False, verbose_name='Is Default?')),
                ('isPrimary', models.BooleanField(default=False, verbose_name='Is Primary?')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='otelimages_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('imageCategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='otels.otelservicecategory', verbose_name='Image Category')),
                ('otel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='otels.otel', verbose_name='Otel')),
                ('roomType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accomodations.roomtype', verbose_name='RoomTypes')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='otelimages_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Görsel',
                'verbose_name_plural': 'Görseller',
            },
        ),
        migrations.CreateModel(
            name='OtelFeatures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='otelfeatures_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='otels.otelfacilitydetail', verbose_name='Otel Facility Feature')),
                ('otel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='otels.otel', verbose_name='Otel')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='otelfeatures_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Otel Özelliği',
                'verbose_name_plural': 'Otel Özellikleri',
            },
        ),
        migrations.AddField(
            model_name='otelfacilitydetail',
            name='serviceCategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='otels.otelservicecategory', verbose_name='Service Category'),
        ),
        migrations.AddField(
            model_name='otelfacilitydetail',
            name='updatedby',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='otelfacilitydetail_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User'),
        ),
        migrations.CreateModel(
            name='OtelContractPaymentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='Name')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='otelcontractpaymenttype_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='otelcontractpaymenttype_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Otel Ödeme Aksiyonu',
                'verbose_name_plural': 'Otel Ödeme Aksiyonları',
            },
        ),
        migrations.CreateModel(
            name='OtelChain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30, verbose_name='Name')),
                ('website', models.CharField(blank=True, max_length=50, verbose_name='Web Site')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='otelchain_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='otelchain_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Otel Zinciri',
                'verbose_name_plural': 'Otel Zinciri',
            },
        ),
        migrations.CreateModel(
            name='OtelCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name En')),
                ('name_ru', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name Ru')),
                ('isMain', models.BooleanField(default=True, verbose_name='Is Main Category?')),
                ('color', models.CharField(blank=True, max_length=7, verbose_name='Color')),
                ('isOtel', models.BooleanField(default=True, verbose_name='Is Otel?')),
                ('isTour', models.BooleanField(default=False, verbose_name='Is Tour?')),
                ('isTransfer', models.BooleanField(default=False, verbose_name='Is Transfer?')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='otelcategory_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('upCategory', models.ManyToManyField(blank=True, related_name='_otelcategory_upCategory_+', to='otels.OtelCategory')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='otelcategory_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Otel Kategorisi',
                'verbose_name_plural': 'Otel Kategorileri',
            },
        ),
        migrations.AddField(
            model_name='otel',
            name='category',
            field=models.ManyToManyField(blank=True, null=True, to='otels.OtelCategory', verbose_name='Categories'),
        ),
        migrations.AddField(
            model_name='otel',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='cities_light.country', verbose_name='Ülke'),
        ),
        migrations.AddField(
            model_name='otel',
            name='createdby',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='otel_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User'),
        ),
        migrations.AddField(
            model_name='otel',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='cities_light.city', verbose_name='Mevki'),
        ),
        migrations.AddField(
            model_name='otel',
            name='otelChain',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='otels.otelchain', verbose_name='Otel Chain'),
        ),
        migrations.AddField(
            model_name='otel',
            name='otelType',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='otels.oteltype', verbose_name='Otel Tipi'),
        ),
        migrations.AddField(
            model_name='otel',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='cities_light.region', verbose_name='İl'),
        ),
        migrations.AddField(
            model_name='otel',
            name='salesChannel',
            field=models.ManyToManyField(blank=True, null=True, to='actions.SalesChannel', verbose_name='Sales Channel'),
        ),
        migrations.AddField(
            model_name='otel',
            name='subRegion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='cities_light.subregion', verbose_name='İlçe'),
        ),
        migrations.AddField(
            model_name='otel',
            name='supplier',
            field=models.ManyToManyField(blank=True, null=True, to='otels.Supplier', verbose_name='Supplier'),
        ),
        migrations.AddField(
            model_name='otel',
            name='theme',
            field=models.ManyToManyField(blank=True, null=True, to='otels.OtelTheme', verbose_name='Themes'),
        ),
        migrations.AddField(
            model_name='otel',
            name='updatedby',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='otel_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User'),
        ),
        migrations.CreateModel(
            name='ModuleFormFeatures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orientation', models.CharField(blank=True, max_length=250, verbose_name='Dikey/Yatay Yonlendirme')),
                ('position', models.CharField(blank=True, max_length=250, verbose_name='Sag/sol/orta')),
                ('themeColor', models.CharField(blank=True, max_length=250, verbose_name='Tema Rengi')),
                ('bgColor', models.CharField(blank=True, max_length=250, verbose_name='BG renk')),
                ('subTitleColor', models.CharField(blank=True, max_length=250, verbose_name='SubTitle renk')),
                ('resBtnColor', models.CharField(blank=True, max_length=250, verbose_name='resBtnColor')),
                ('callBtnColor', models.CharField(blank=True, max_length=250, verbose_name='callBtnColor')),
                ('transparency', models.FloatField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('isGroupHotel', models.CharField(blank=True, max_length=250, verbose_name='is Group Hotel')),
                ('isSubtitleActive', models.CharField(blank=True, max_length=250, verbose_name='is Subtitle Active')),
                ('subtitleText', models.CharField(blank=True, max_length=250, verbose_name='Subtitle Text')),
                ('isPaymentSystem', models.CharField(blank=True, max_length=250, verbose_name='is Payment System')),
                ('phoneNumber', models.CharField(blank=True, max_length=250, verbose_name='phoneNumber')),
                ('fontColor', models.CharField(blank=True, max_length=250, verbose_name='fontColor')),
                ('isMobileFooter', models.BooleanField(default=True, verbose_name='isMobileFooter')),
                ('isChatbot', models.BooleanField(default=True, verbose_name='isChatbot')),
                ('isPushNotif', models.BooleanField(default=True, verbose_name='isPushNotif')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='moduleformfeature_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('otel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='otels.otel', verbose_name='Otel')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='moduleformfeature_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Modul Form Ozelligi',
                'verbose_name_plural': 'Modul Form Ozellikleri',
            },
        ),
        migrations.CreateModel(
            name='InvoiceInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postalCode', models.CharField(blank=True, max_length=100, null=True, verbose_name='Posta kodu')),
                ('address', models.CharField(blank=True, max_length=250, null=True, verbose_name='Adres')),
                ('title', models.CharField(blank=True, max_length=250, null=True, verbose_name='Ticari Unvan')),
                ('taxOffice', models.CharField(blank=True, max_length=250, null=True, verbose_name='Vergi dairesi')),
                ('taxNumber', models.CharField(blank=True, max_length=250, null=True, verbose_name='Vergi numarasi')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='invoiceinfo_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('otel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='invoiceinfo', to='otels.otel', verbose_name='Otel')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='cities_light.region', verbose_name='İl')),
                ('subRegion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='cities_light.subregion', verbose_name='İlçe')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='invoiceinfo_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Fatura Bilgisi',
                'verbose_name_plural': 'Fatura Bilgileri',
            },
        ),
        migrations.CreateModel(
            name='HotelGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groupName', models.CharField(blank=True, max_length=250, null=True, verbose_name='Otel Groupname')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='hotelgroup_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('otel', models.ManyToManyField(blank=True, to='otels.Otel', verbose_name='Otel')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='hotelgroup_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Otel Grubu',
                'verbose_name_plural': 'Otel Grupları',
            },
        ),
        migrations.CreateModel(
            name='EpidemicMeasures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measuresJSON', models.JSONField(blank=True, null=True, verbose_name='Epidemic Measures Json')),
                ('otherMeasures', models.TextField(blank=True, null=True, verbose_name='Other Measures')),
                ('certificate', models.FileField(blank=True, null=True, upload_to='certificate/', verbose_name='Koronavirüs Önlemleri Bakanlık Sertifikası')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='epidemicmeasures_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('otel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='epidemicmeasure', to='otels.otel', verbose_name='Otel')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='epidemicmeasures_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Salgın Hastalık Tedbiri',
                'verbose_name_plural': 'Salgın Hastalık Tedbirleri',
            },
        ),
        migrations.CreateModel(
            name='CustomerPaymentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='Name')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='customerpaymentcategory_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='customerpaymentcategory_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Musteri Ödeme Aksiyonu',
                'verbose_name_plural': 'Musteri Ödeme Aksiyonları',
            },
        ),
        migrations.CreateModel(
            name='ContractItemsApproval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item1', models.BooleanField(default=False, verbose_name='Item 1')),
                ('item2', models.BooleanField(default=False, verbose_name='Item 2')),
                ('item3', models.BooleanField(default=False, verbose_name='Item 3')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='contractitemsapproval_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('otel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='contractitems', to='otels.otel', verbose_name='Otel')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='contractitemsapproval_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Sözleşme Şartı',
                'verbose_name_plural': 'Sözleşme Şartları',
            },
        ),
        migrations.AddField(
            model_name='contract',
            name='customerPaymentType',
            field=models.ManyToManyField(blank=True, to='otels.CustomerPaymentType', verbose_name='Customer Payment Type'),
        ),
        migrations.AddField(
            model_name='contract',
            name='inDays',
            field=models.ManyToManyField(blank=True, to='accomodations.inDays', verbose_name='Days'),
        ),
        migrations.AddField(
            model_name='contract',
            name='otel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='otels.otel', verbose_name='Otel'),
        ),
        migrations.AddField(
            model_name='contract',
            name='otelContractPaymentType',
            field=models.ManyToManyField(blank=True, to='otels.OtelContractPaymentType', verbose_name='Otel Contract Payment Type'),
        ),
        migrations.AddField(
            model_name='contract',
            name='updatedby',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='contract_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User'),
        ),
        migrations.CreateModel(
            name='ChilConditionTheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Name')),
                ('ratio', models.FloatField(blank=True, max_length=250, null=True, verbose_name='Ratio')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('childCondition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accomodations.childcondition', verbose_name='ChildCondition')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='chilconditiontheme_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('otel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='otels.otel', verbose_name='Otel')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='chilconditiontheme_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Çocuk Şartı Teması',
                'verbose_name_plural': 'Çocuk Şartı Temaları',
            },
        ),
        migrations.CreateModel(
            name='CCInterestRatio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interestRatios', models.JSONField(blank=True, null=True, verbose_name='Credit Card Interest Ratios')),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='otels.bank', verbose_name='Bank')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ccinterestratio_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('otel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='otels.otel', verbose_name='Otel')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ccinterestratio_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'KK Faiz Oranı',
                'verbose_name_plural': 'KK Faiz Oranları',
            },
        ),
        migrations.CreateModel(
            name='BrokenPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.IntegerField(blank=True, null=True)),
                ('priceId', models.IntegerField(blank=True, null=True)),
                ('actionPriceId', models.IntegerField(blank=True, null=True)),
                ('accomodationStartDate', models.DateField(blank=True, null=True)),
                ('accomodationEndDate', models.DateField(blank=True, null=True)),
                ('saleStartDate', models.DateField(blank=True, null=True)),
                ('saleEndDate', models.DateField(blank=True, null=True)),
                ('priceDays', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, null=True, size=None)),
                ('priceCalcType', models.IntegerField(blank=True, null=True)),
                ('perPersonPrice', models.FloatField(blank=True, null=True)),
                ('comissionRate', models.FloatField(blank=True, null=True)),
                ('base', models.IntegerField(blank=True, null=True)),
                ('ebId', models.IntegerField(blank=True, null=True)),
                ('ebRate', models.FloatField(blank=True, null=True)),
                ('ebBase', models.IntegerField(blank=True, null=True)),
                ('ebComissionType', models.IntegerField(blank=True, null=True)),
                ('ebValidDays', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, null=True, size=None)),
                ('ebExcludeDates', django.contrib.postgres.fields.ArrayField(base_field=models.DateField(), blank=True, null=True, size=None)),
                ('spoId', models.IntegerField(blank=True, null=True)),
                ('spoRate', models.FloatField(blank=True, null=True)),
                ('spoBase', models.IntegerField(blank=True, null=True)),
                ('spoComissionType', models.IntegerField(blank=True, null=True)),
                ('spoValidDays', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, null=True, size=None)),
                ('spoExcludeDates', django.contrib.postgres.fields.ArrayField(base_field=models.DateField(), blank=True, null=True, size=None)),
                ('totalComissionPrice', models.FloatField(blank=True, null=True)),
                ('netCost', models.FloatField(blank=True, null=True)),
                ('profitMargin', models.FloatField(blank=True, null=True)),
                ('salePrice', models.FloatField(blank=True, null=True)),
                ('posterDiscountRate', models.FloatField(blank=True, null=True)),
                ('posterPrice', models.FloatField(blank=True, null=True)),
                ('realProfit', models.FloatField(blank=True, null=True)),
                ('salesChannel', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, null=True, size=None)),
                ('totalMinDays', models.IntegerField(blank=True, null=True)),
                ('totalMaxDays', models.IntegerField(blank=True, null=True)),
                ('priceMinDays', models.IntegerField(blank=True, null=True)),
                ('priceMaxDays', models.IntegerField(blank=True, null=True)),
                ('priceTemplateId', models.IntegerField(blank=True, null=True)),
                ('isActive', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Update Date')),
                ('createdBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='otels_brokenprice_created_by', to=settings.AUTH_USER_MODEL)),
                ('otel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='otels.otel', verbose_name='Otel')),
                ('pensionType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accomodations.pensiontype')),
                ('roomType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accomodations.roomtype')),
                ('updatedBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='otels_brokenprice_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'brokenprice',
                'verbose_name_plural': 'brokenprices',
                'db_table': 'brokenprice',
            },
        ),
        migrations.CreateModel(
            name='AccountInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iban', models.CharField(blank=True, max_length=250, verbose_name='IBAN')),
                ('accountType', models.CharField(blank=True, max_length=250, verbose_name='Hesap Turu')),
                ('swiftcode', models.CharField(blank=True, max_length=250, verbose_name='swift kodu')),
                ('accountNo', models.CharField(blank=True, max_length=250, verbose_name='account no')),
                ('branchNo', models.CharField(blank=True, max_length=250, verbose_name='sube no')),
                ('branch', models.CharField(blank=True, max_length=250, verbose_name='Sube')),
                ('commissionRate', models.FloatField(blank=True, default=0, null=True)),
                ('isActive', models.BooleanField(default=True, verbose_name='Is Active')),
                ('isStatusActive', models.BooleanField(default=True, verbose_name='Is Status Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='otels.bank', verbose_name='Bank')),
                ('createdby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='accountinfo_create_user', to=settings.AUTH_USER_MODEL, verbose_name='Created By User')),
                ('currencyType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='accomodations.currency', verbose_name='currency type')),
                ('otel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='otels.otel', verbose_name='Otel')),
                ('updatedby', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='accountinfo_update_user', to=settings.AUTH_USER_MODEL, verbose_name='Updated By User')),
            ],
            options={
                'verbose_name': 'Banka Hesabı',
                'verbose_name_plural': 'Banka Hesapları',
            },
        ),
    ]
